{"ast":null,"code":"const WIDTH = 640;\nconst HEIGHT = 480;\n\nclass DistanceSensor {\n  constructor() {\n    this.maxDistance = 100;\n  }\n\n}\n\nclass Car {\n  constructor() {\n    this.x = 50;\n    this.y = 50;\n    this.height = 25;\n    this.width = 40;\n    this.speed = 0;\n    this.sensors = [new Sensor()];\n    this.maxSpeed = 3;\n    this.acceleration = 0.5;\n    this.angle = 0;\n\n    this.speedUp = () => {\n      this.speed = Math.min(this.maxSpeed, this.speed += this.acceleration);\n    };\n\n    this.speedDown = () => {\n      this.speed = Math.max(0, this.speed -= this.acceleration);\n    };\n\n    this.steerLeft = () => {\n      this.angle = (this.angle - 1) % 360;\n    };\n\n    this.steerRight = () => {\n      this.angle = (this.angle + 1) % 360;\n    };\n\n    this.update = () => {\n      const radian = this.angle * Math.PI / 180;\n      this.x += this.speed * Math.cos(radian);\n      this.y += this.speed * Math.sin(radian);\n    };\n  }\n\n}\n\n;\nexport default function sketch(p) {\n  let canvas;\n  let image;\n  const car = new Car();\n\n  p.setup = () => {\n    image = p.createImage(WIDTH, HEIGHT);\n    canvas = p.createCanvas(WIDTH, HEIGHT);\n    p.noStroke();\n    p.background(0);\n  };\n\n  p.mousePressed = () => {\n    console.log(p.get(p.mouseX, p.mouseY));\n  };\n\n  p.draw = () => {\n    p.background(255);\n    p.update();\n\n    if (image) {\n      p.image(image, 0, 0, WIDTH, HEIGHT);\n    }\n\n    p.translate(car.x + car.width / 2, car.y + car.height / 2);\n    p.angleMode(p.DEGREES);\n    p.rotate(car.angle);\n    p.fill(150, 100, 200);\n    const carRelativeCenterX = 0 - car.width / 2;\n    const carRelativeCenterY = 0 - car.height / 2;\n    p.rect(carRelativeCenterX, carRelativeCenterY, car.width, car.height);\n    p.fill(150, 150, 150);\n    p.rect(carRelativeCenterX + 20, carRelativeCenterY + 5, 10, 15);\n    p.fill('black');\n    p.rect(carRelativeCenterX + 36, carRelativeCenterY + 0, 4, 6);\n    p.rect(carRelativeCenterX + 36, carRelativeCenterY + 19, 4, 6);\n  };\n\n  p.update = () => {\n    if (p.keyIsDown(87)) {\n      car.speedUp();\n    }\n\n    if (p.keyIsDown(83)) {\n      car.speedDown();\n    }\n\n    if (p.keyIsDown(65)) {\n      car.steerLeft();\n    }\n\n    if (p.keyIsDown(68)) {\n      car.steerRight();\n    }\n\n    car.update();\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    if (canvas) p.fill(newProps.color);\n  };\n\n  p.keyPressed = () => {\n    if (p.keyCode == 76) {\n      const px = JSON.parse(window.localStorage.getItem('map'));\n      const image1 = p.get(0, 0, WIDTH, HEIGHT);\n      image1.loadPixels();\n\n      for (var i = 0; i < image1.pixels.length; i += 4) {\n        const startIndex = Math.floor(i / 4);\n        image1.pixels[i] = px[startIndex][0];\n        image1.pixels[i + 1] = px[startIndex][1];\n        image1.pixels[i + 2] = px[startIndex][2];\n      }\n\n      image1.updatePixels();\n      image = image1;\n    }\n  };\n}","map":{"version":3,"sources":["/home/caner/Desktop/selfcar/src/components/game-sketch.js"],"names":["WIDTH","HEIGHT","DistanceSensor","maxDistance","Car","x","y","height","width","speed","sensors","Sensor","maxSpeed","acceleration","angle","speedUp","Math","min","speedDown","max","steerLeft","steerRight","update","radian","PI","cos","sin","sketch","p","canvas","image","car","setup","createImage","createCanvas","noStroke","background","mousePressed","console","log","get","mouseX","mouseY","draw","translate","angleMode","DEGREES","rotate","fill","carRelativeCenterX","carRelativeCenterY","rect","keyIsDown","myCustomRedrawAccordingToNewPropsHandler","newProps","color","keyPressed","keyCode","px","JSON","parse","window","localStorage","getItem","image1","loadPixels","i","pixels","length","startIndex","floor","updatePixels"],"mappings":"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","sourcesContent":["const WIDTH = 640;\nconst HEIGHT = 480;\nclass DistanceSensor{\n  maxDistance = 100;\n}\nclass Car{\n  x = 50;\n  y = 50;\n  height = 25;\n  width = 40;\n  speed = 0;\n  sensors = [new Sensor()];\n  maxSpeed = 3;\n  acceleration = 0.5;\n  angle = 0;\n  speedUp = () => {\n    this.speed = Math.min(this.maxSpeed, this.speed += this.acceleration);\n  };\n  speedDown = () => {\n    this.speed = Math.max(0, this.speed -= this.acceleration);\n  };\n  steerLeft = () => {\n    this.angle = (this.angle -1) % 360;\n  }\n  steerRight = () => {\n    this.angle = (this.angle +1) % 360;\n  }\n  update = () => {\n    const radian = this.angle * Math.PI / 180;\n    this.x += this.speed * Math.cos(radian);\n    this.y += this.speed * Math.sin(radian);\n  };\n};\nexport default function sketch(p){\n  let canvas;\n  let image;\n  const car = new Car();\n\n  p.setup = () => {\n    image = p.createImage(WIDTH, HEIGHT);\n    canvas = p.createCanvas(WIDTH, HEIGHT);\n    p.noStroke();\n    p.background(0);\n  }\n  p.mousePressed = () => {\n    console.log(p.get(p.mouseX, p.mouseY));\n  }\n  p.draw = () => {\n    p.background(255);\n    p.update();\n    if (image){\n      p.image(image,0,0,WIDTH,HEIGHT);\n    }\n    p.translate(car.x + car.width/2, car.y + car.height/2);\n    p.angleMode(p.DEGREES);\n    p.rotate( car.angle);\n    p.fill(150,100,200);\n    const carRelativeCenterX = 0-car.width / 2;\n    const carRelativeCenterY = 0-car.height / 2;\n    p.rect(carRelativeCenterX,carRelativeCenterY, car.width, car.height);\n    p.fill(150,150,150);\n    p.rect(carRelativeCenterX + 20 ,carRelativeCenterY + 5,10,15);\n    p.fill('black');\n    p.rect(carRelativeCenterX + 36,carRelativeCenterY + 0,4,6);\n    p.rect(carRelativeCenterX + 36,carRelativeCenterY + 19,4,6);\n  }\n  p.update = () => {\n      if (p.keyIsDown(87)){\n        car.speedUp();\n      }\n      if (p.keyIsDown(83)){\n        car.speedDown();\n      }\n      if (p.keyIsDown(65)){\n        car.steerLeft();\n      }\n      if (p.keyIsDown(68)){\n        car.steerRight();\n      }\n    car.update();\n  };\n  p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n    if(canvas)\n      p.fill(newProps.color);\n  }\n  p.keyPressed = () => {\n    if(p.keyCode == 76){\n        const px = JSON.parse(window.localStorage.getItem('map'));\n        const image1 = p.get(0, 0, WIDTH, HEIGHT);\n        image1.loadPixels();\n        for(var i = 0; i < image1.pixels.length; i += 4){\n          const startIndex = Math.floor(i/4);\n          image1.pixels[i] = px[startIndex][0];\n          image1.pixels[i+1] = px[startIndex][1];\n          image1.pixels[i+2] = px[startIndex][2];\n      }\n      image1.updatePixels();\n      image=image1;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}