{"ast":null,"code":"const WIDTH = 640;\nconst HEIGHT = 480;\n\nclass Car {\n  constructor() {\n    this.x = 50;\n    this.y = 50;\n  }\n\n}\n\n;\nexport default function sketch(p) {\n  let canvas;\n  let image;\n  const car = new Car();\n\n  p.setup = () => {\n    image = p.createImage(WIDTH, HEIGHT);\n    canvas = p.createCanvas(WIDTH, HEIGHT);\n    p.noStroke();\n    p.background(0);\n  };\n\n  p.mousePressed = () => {\n    console.log(p.get(p.mouseX, p.mouseY));\n  };\n\n  p.draw = () => {\n    if (image) {\n      p.image(image, 0, 0, WIDTH, HEIGHT);\n    }\n\n    p.rect(car.x, car.y, 40, 25);\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    if (canvas) p.fill(newProps.color);\n  };\n\n  p.keyPressed = () => {\n    if (p.keyCode == 76) {\n      const px = JSON.parse(window.localStorage.getItem('map'));\n      const image1 = p.get(0, 0, WIDTH, HEIGHT);\n      image1.loadPixels();\n\n      for (var i = 0; i < image1.pixels.length; i += 4) {\n        const startIndex = Math.floor(i / 4);\n        image1.pixels[i] = px[startIndex][0];\n        image1.pixels[i + 1] = px[startIndex][1];\n        image1.pixels[i + 2] = px[startIndex][2];\n      }\n\n      image1.updatePixels();\n      image = image1;\n    }\n  };\n}","map":{"version":3,"sources":["/home/caner/Desktop/selfcar/src/components/game-sketch.js"],"names":["WIDTH","HEIGHT","Car","x","y","sketch","p","canvas","image","car","setup","createImage","createCanvas","noStroke","background","mousePressed","console","log","get","mouseX","mouseY","draw","rect","myCustomRedrawAccordingToNewPropsHandler","newProps","fill","color","keyPressed","keyCode","px","JSON","parse","window","localStorage","getItem","image1","loadPixels","i","pixels","length","startIndex","Math","floor","updatePixels"],"mappings":"AAAA,MAAMA,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAG,GAAf;;AACA,MAAMC,GAAN,CAAS;AAAA;AAAA,SACPC,CADO,GACH,EADG;AAAA,SAEPC,CAFO,GAEH,EAFG;AAAA;;AAAA;;AAGR;AACD,eAAe,SAASC,MAAT,CAAgBC,CAAhB,EAAkB;AAC/B,MAAIC,MAAJ;AACA,MAAIC,KAAJ;AACA,QAAMC,GAAG,GAAG,IAAIP,GAAJ,EAAZ;;AAEAI,EAAAA,CAAC,CAACI,KAAF,GAAU,MAAM;AAEdF,IAAAA,KAAK,GAAGF,CAAC,CAACK,WAAF,CAAcX,KAAd,EAAqBC,MAArB,CAAR;AACAM,IAAAA,MAAM,GAAGD,CAAC,CAACM,YAAF,CAAeZ,KAAf,EAAsBC,MAAtB,CAAT;AACAK,IAAAA,CAAC,CAACO,QAAF;AACAP,IAAAA,CAAC,CAACQ,UAAF,CAAa,CAAb;AACD,GAND;;AAOAR,EAAAA,CAAC,CAACS,YAAF,GAAiB,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYX,CAAC,CAACY,GAAF,CAAMZ,CAAC,CAACa,MAAR,EAAgBb,CAAC,CAACc,MAAlB,CAAZ;AACD,GAFD;;AAGAd,EAAAA,CAAC,CAACe,IAAF,GAAS,MAAM;AACb,QAAIb,KAAJ,EAAU;AACRF,MAAAA,CAAC,CAACE,KAAF,CAAQA,KAAR,EAAc,CAAd,EAAgB,CAAhB,EAAkBR,KAAlB,EAAwBC,MAAxB;AACD;;AACDK,IAAAA,CAAC,CAACgB,IAAF,CAAOb,GAAG,CAACN,CAAX,EAAaM,GAAG,CAACL,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB;AACD,GALD;;AAMAE,EAAAA,CAAC,CAACiB,wCAAF,GAA8CC,QAAD,IAAc;AACzD,QAAGjB,MAAH,EACED,CAAC,CAACmB,IAAF,CAAOD,QAAQ,CAACE,KAAhB;AACH,GAHD;;AAIApB,EAAAA,CAAC,CAACqB,UAAF,GAAe,MAAM;AACnB,QAAIrB,CAAC,CAACsB,OAAF,IAAa,EAAjB,EAAoB;AAChB,YAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,KAA5B,CAAX,CAAX;AACA,YAAMC,MAAM,GAAG7B,CAAC,CAACY,GAAF,CAAM,CAAN,EAAS,CAAT,EAAYlB,KAAZ,EAAmBC,MAAnB,CAAf;AACAkC,MAAAA,MAAM,CAACC,UAAP;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,MAAM,CAACG,MAAP,CAAcC,MAAjC,EAAyCF,CAAC,IAAI,CAA9C,EAAgD;AAC9C,cAAMG,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAC,GAAC,CAAb,CAAnB;AACAF,QAAAA,MAAM,CAACG,MAAP,CAAcD,CAAd,IAAmBR,EAAE,CAACW,UAAD,CAAF,CAAe,CAAf,CAAnB;AACAL,QAAAA,MAAM,CAACG,MAAP,CAAcD,CAAC,GAAC,CAAhB,IAAqBR,EAAE,CAACW,UAAD,CAAF,CAAe,CAAf,CAArB;AACAL,QAAAA,MAAM,CAACG,MAAP,CAAcD,CAAC,GAAC,CAAhB,IAAqBR,EAAE,CAACW,UAAD,CAAF,CAAe,CAAf,CAArB;AACH;;AACDL,MAAAA,MAAM,CAACQ,YAAP;AACAnC,MAAAA,KAAK,GAAC2B,MAAN;AACD;AACF,GAdD;AAeD","sourcesContent":["const WIDTH = 640;\nconst HEIGHT = 480;\nclass Car{\n  x = 50;\n  y = 50;\n};\nexport default function sketch(p){\n  let canvas;\n  let image;\n  const car = new Car();\n\n  p.setup = () => {\n\n    image = p.createImage(WIDTH, HEIGHT);\n    canvas = p.createCanvas(WIDTH, HEIGHT);\n    p.noStroke();\n    p.background(0);\n  }\n  p.mousePressed = () => {\n    console.log(p.get(p.mouseX, p.mouseY));\n  }\n  p.draw = () => {\n    if (image){\n      p.image(image,0,0,WIDTH,HEIGHT);\n    }\n    p.rect(car.x,car.y,40,25);\n  }\n  p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n    if(canvas)\n      p.fill(newProps.color);\n  }\n  p.keyPressed = () => {\n    if (p.keyCode == 76){\n        const px = JSON.parse(window.localStorage.getItem('map'));\n        const image1 = p.get(0, 0, WIDTH, HEIGHT);\n        image1.loadPixels();\n        for(var i = 0; i < image1.pixels.length; i += 4){\n          const startIndex = Math.floor(i/4);\n          image1.pixels[i] = px[startIndex][0];\n          image1.pixels[i+1] = px[startIndex][1];\n          image1.pixels[i+2] = px[startIndex][2];\n      }\n      image1.updatePixels();\n      image=image1;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}